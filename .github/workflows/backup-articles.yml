name: Backup Articles

on:
  workflow_dispatch:
    inputs:
      message:
        description: 'Commit message (optional)'
        required: false
        default: 'Backup articles'
        type: string

jobs:
  backup:
    runs-on: ubuntu-latest
    concurrency: 
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run backup script
      env:
        GITHUB_TOKEN: ${{ secrets.BLOG_SECRET }}
      run: python3 backup_issues.py
    
    - name: Configure Git
      env:
        USERNAME: ${{ secrets.GIT_USERNAME }}
        EMAIL: ${{ secrets.GIT_EMAIL }}
      run: |
        git config --global user.name $USERNAME
        git config --global user.email $EMAIL
    
    - name: Commit changes
      run: |
        git checkout main
        git pull origin main
        # 检查是否有更改需要提交
        if git diff --quiet && git diff --cached --quiet; then
          echo "No changes to commit"
        else
          git add .
          # 使用输入的消息或默认消息加上日期
          if [ -n "${{ inputs.message }}" ] && [ "${{ inputs.message }}" != "Backup articles" ]; then
            COMMIT_MSG="${{ inputs.message }} - $(date +'%Y-%m-%d')"
          else
            COMMIT_MSG="Backup articles - $(date +'%Y-%m-%d')"
          fi
          git commit -m "$COMMIT_MSG"
        fi
    
    - name: Push changes
      env:
        USERNAME: ${{ secrets.GIT_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.BLOG_SECRET }}
      run: |
        # 检查是否有提交需要推送
        if git diff --quiet HEAD origin/main; then
          echo "No changes to push"
        else
          # 重试推送，最多3次
          for i in {1..3}; do
            if git push https://$USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git; then
              echo "Push successful on attempt $i"
              break
            else
              echo "Push failed on attempt $i, pulling latest changes and retrying..."
              git pull origin main
              sleep 2
            fi
          done
        fi
    
    - name: Complete
      run: echo 'Backup articles completed successfully!'