---
globs: *.py
description: "Python 编码规范和最佳实践"
---

# Python 编码规范

## 基本规范

- 使用 UTF-8 编码，文件头部添加 `# -*- coding: utf-8 -*-`
- 使用 4 个空格缩进，不使用制表符
- 行长度限制为 88 字符（Black 格式）
- 使用中文注释和文档字符串

## 导入规范

- 导入顺序：标准库 → 第三方库 → 本地模块
- 使用绝对导入路径
- 每个导入语句独占一行

```python
import os
import time

from github import Github
from github.Issue import Issue

from word_cloud import WordCloudGenerator
```

## 变量命名

- 使用下划线命名法（snake_case）
- 全局变量使用小写字母
- 常量使用大写字母
- 类名使用大驼峰命名法（PascalCase）

## 函数规范

- 函数名使用动词，清晰表达功能
- 添加类型注解（Type Hints）
- 使用中文文档字符串说明函数用途
- 函数参数使用有意义的名称

```python
def format_issue(issue: Issue) -> str:
    """格式化单个 issue 为 markdown 格式
    
    Args:
        issue: GitHub Issue 对象
        
    Returns:
        格式化后的 markdown 字符串
    """
    return "- %s [%s](%s) \n" % (
        issue.created_at.strftime("%Y-%m-%d"),
        issue.title,
        issue.html_url,
    )
```

## 错误处理

- 使用 try-except 处理可能的异常
- 提供有意义的错误信息
- 记录错误日志便于调试

## GitHub API 集成

- 使用环境变量存储敏感信息（GITHUB_TOKEN）
- 合理处理 API 限制和网络异常
- 添加适当的延时避免触发速率限制